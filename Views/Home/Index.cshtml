@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome to the Ebbinghaus Flashcard App</h1>
    <p>Improve your memory with spaced repetition!</p>
    <a asp-action="Index" asp-controller="FlashcardSets" class="btn btn-primary">View Flashcard Sets</a>
</div>
<div>
    <h2>What is the Ebbinghaus Forgetting Curve?</h2>
    <p>The Ebbinghaus Forgetting Curve is a theory that describes how we forget information over time. The curve shows that we forget the most information shortly after learning it, and then the rate of forgetting slows down over time. By reviewing information at the right intervals, you can improve your memory and retain information for longer periods of time.</p>
    <p>Spaced repetition is a technique that uses the Ebbinghaus Forgetting Curve to help you remember information more effectively. By reviewing flashcards at increasing intervals, you can reinforce your memory and retain information for longer periods of time.</p>
</div>
<div>
    <h2>To Review</h2>
    <p>This is a real-time app and flashcard sets you need to review will automatically apper in in this section</p>
    <div id="toReviewSection">
        <!-- flashcard sets that need review will be added here dynamically -->
    </div>
</div>

<!-- include signalr JavaScript client -->
@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.9/signalr.min.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/notificationHub")
            .build();

        // Listen for notifications and log the connection status
        connection.on("ReceiveMessage", function (user, message) {
            console.log(`Message received from ${user}: ${message}`);
            const notificationElement = document.createElement("div");
            notificationElement.className = "alert alert-info";
            notificationElement.textContent = `${user}: ${message}`;
            document.body.appendChild(notificationElement);

            // Automatically remove notification after 10 seconds
            setTimeout(() => {
                document.body.removeChild(notificationElement);
            }, 10000);
        });

        // Add flashcard sets in the "To Review" section
        connection.on("AddFlashcardSet", function (flashcardSetId, flashcardSetName) {
            const reviewList = document.getElementById("toReviewSection");
            const flashcardItem = document.createElement("div");
            flashcardItem.id = `flashcardSet-${flashcardSetId}`;
            flashcardItem.className = "alert alert-info";
            flashcardItem.innerHTML = `<strong>${flashcardSetName}</strong> needs to be reviewed.
                                              <a href="/Review/Review?flashcardSetId=${flashcardSetId}&currentIndex=0"
                                              class="btn btn-primary btn-sm">Start Review</a>`;
            reviewList.appendChild(flashcardItem);
        });

        // Remove flashcard sets from the "To Review" section
        connection.on("RemoveFlashcardSet", function (flashcardSetId) {
            const flashcardItem = document.getElementById(`flashcardSet-${flashcardSetId}`);
            if (flashcardItem) {
                flashcardItem.remove();
            }
        });

        // Start SignalR connection
        connection.start()
            .then(function () {
                console.log("SignalR connection established.");
            })
            .catch(function (err) {
                console.error("Error establishing SignalR connection: " + err.toString());
            });
    </script>
}

