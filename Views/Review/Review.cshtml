@model EbbinghausFlashcardApp.Models.FlashcardSet

@{
    ViewData["Title"] = "It's time for review!";
    var currentIndex = (int)ViewBag.CurrentIndex;
    var totalCount = (int)ViewBag.TotalCount;
    var flashcardsList = Model.Flashcards.ToList();
}

<a asp-controller="FlashcardSets" asp-action="Details" asp-route-id="@Model.Id" class="btn btn-link">Exit Review</a>

<div class="card mt-4">
    <div class="card-body">
        <h3 class="card-title">Flashcard @currentIndex + 1 of @totalCount</h3>
        <p class="card-text">
            <strong>Term:</strong> @flashcardsList[currentIndex].Term
        </p>
        <button class="btn btn-outline-primary" id="show-definition-btn" onclick="toggleDefinition()">Show Definition</button>
        <div id="definition-container" style="display: none;">
            <p><strong>Definition:</strong> @flashcardsList[currentIndex].Definition</p>
        </div>

        <form asp-action="MarkFlashcard" method="post" class="mt-3">
            @Html.AntiForgeryToken()
            <input type="hidden" name="flashcardSetId" value="@Model.Id" />
            <input type="hidden" name="flashcardId" value="@flashcardsList[currentIndex].Id" />
            <input type="hidden" name="currentIndex" value="@currentIndex" />
            <button type="submit" name="isFamiliar" value="true" class="btn btn-success">Familiar</button>
            <button type="submit" name="isFamiliar" value="false" class="btn btn-danger">Not Familiar</button>
        </form>

        <div class="mt-3">
            @if (currentIndex > 0)
            {
                <a asp-action="Review" asp-route-flashcardSetId="@Model.Id" asp-route-currentIndex="@(currentIndex - 1)" class="btn btn-secondary">Previous</a>
            }
            @if (currentIndex < totalCount - 1)
            {
                <a asp-action="Review" asp-route-flashcardSetId="@Model.Id" asp-route-currentIndex="@(currentIndex + 1)" class="btn btn-secondary">Next</a>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function toggleDefinition() {
            const definitionContainer = document.getElementById('definition-container');
            const showDefinitionBtn = document.getElementById('show-definition-btn');
            if (definitionContainer.style.display === 'none') {
                definitionContainer.style.display = 'block';
                showDefinitionBtn.textContent = 'Hide Definition';
            } else {
                definitionContainer.style.display = 'none';
                showDefinitionBtn.textContent = 'Show Definition';
            }
        }
    </script>
}